{"version":3,"sources":["img/trophy.svg","components/Header.jsx","components/Search.jsx","img/chevron-right-purple.svg","img/chevron-down-purple.svg","components/Match.jsx","components/MatchNotLastMonth.jsx","context/AppContext.js","img/chevron-right-black.svg","img/chevron-down-black.svg","components/Main.jsx","components/Layout.jsx","hooks/useInitialState.js","App.jsx","index.js"],"names":["Header","className","src","trophy","alt","Search","search","searchInput","handleSearch","type","value","ref","onChange","Match","match","useState","toggle","setShow","playerHome","playerOut","score","onClick","purpleDownArrow","purpleRightArrow","winner","MatchNotLastMonth","matchNotLastMonth","AppContext","React","createContext","Main","allGames","setGames","useContext","Appcontext","state","dateLastMonthShowDate","matches","matchesNotLastMonth","setSearch","useRef","useCallback","current","filterPlayers","useMemo","filter","players","toLowerCase","includes","blackDownArrow","blackRightArrow","map","id","Layout","useInitialState","initialState","setState","addToMatch","items","notLastMontGames","notLastMonth","Date","parse","date","getMonth","getFullYear","lastMonth","length","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.985e15c5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trophy.4eb8ddde.svg\";","import React from 'react';\r\nimport trophy from '../img/trophy.svg';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<nav>\r\n\t\t\t\t<div className='header-title'>\r\n\t\t\t\t\t<h1>Ping Pong Score</h1>\r\n\t\t\t\t\t<img src={trophy} alt='trophy' />\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className='header-name'>\r\n\t\t\t\t\t<p>by Jordi Mesas del Rio</p>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Search = ({search, searchInput,handleSearch}) => {\r\n\treturn (\r\n\t\t<div className=\"score-search\">\r\n            <h5>Search:</h5>\r\n\t\t\t<input                                \r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={search}\r\n\t\t\t\tref={searchInput}\r\n\t\t\t\tonChange={handleSearch}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/chevron-right-purple.7452395a.svg\";","export default __webpack_public_path__ + \"static/media/chevron-down-purple.f6902967.svg\";","import React, { useState } from 'react';\r\nimport purpleRightArrow from '../img/chevron-right-purple.svg';\r\nimport purpleDownArrow from '../img/chevron-down-purple.svg';\r\n\r\nconst Match = ({ match }) => {\r\n\tconst [toggle, setShow] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className='match-items'>\r\n\t\t\t<div className='match-items-layout'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tPlayers: {match.playerHome} vs {match.playerOut}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p> Score: {match.score}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<img onClick={() => setShow(!toggle)} src={!toggle ? purpleRightArrow : purpleDownArrow} alt='arrow' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\t{toggle && <p className=\"match-items-styleWinner\">The {match.winner} player is the winner</p>}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Match;\r\n","import React,{useState} from 'react';\r\nimport purpleRightArrow from '../img/chevron-right-purple.svg';\r\nimport purpleDownArrow from '../img/chevron-down-purple.svg';\r\n\r\nconst MatchNotLastMonth = ({ matchNotLastMonth }) => {\r\n\tconst [toggle, setShow] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className='match-items'>\r\n\t\t\t<div  className='match-items-layout'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tPlayers: {matchNotLastMonth.playerHome} vs {matchNotLastMonth.playerOut}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p> Score:{matchNotLastMonth.score}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img  onClick={() => setShow(!toggle)} src={!toggle ? purpleRightArrow : purpleDownArrow} alt='arrow' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{toggle && <p className=\"match-items-styleWinner\">The {matchNotLastMonth.winner} player is the winner</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MatchNotLastMonth;\r\n","import React from 'react';\r\n\r\nconst AppContext = React.createContext({});\r\n\r\nexport default AppContext;","export default __webpack_public_path__ + \"static/media/chevron-right-black.757914a7.svg\";","export default __webpack_public_path__ + \"static/media/chevron-down-black.a815d3cb.svg\";","import React, {\r\n\tuseContext,\r\n\tuseState,\r\n\tuseMemo,\r\n\tuseRef,\r\n\tuseCallback,\r\n} from 'react';\r\nimport Search from './Search';\r\nimport Match from './Match';\r\nimport MatchNotLastMonth from './MatchNotLastMonth';\r\nimport Appcontext from '../context/AppContext';\r\nimport blackRightArrow from '../img/chevron-right-black.svg';\r\nimport blackDownArrow from '../img/chevron-down-black.svg';\r\n\r\nconst Main = () => {\r\n\tconst [toggle, setShow] = useState(false);\r\n\tconst [allGames, setGames] = useState(true);\r\n\tconst { state, dateLastMonthShowDate } = useContext(Appcontext);\r\n\tconst { matches, matchesNotLastMonth } = state;\r\n\tconst [search, setSearch] = useState('');\r\n\t//ponemos dentro values de inputs para ser usados\r\n\tconst searchInput = useRef(null);\r\n\r\n\tconst handleMatchDate = () => {\r\n\t\tsetGames(!allGames);\r\n\t\tif (allGames) {\r\n\t\t\tdateLastMonthShowDate();\r\n\t\t}\r\n\t};\r\n\tconst showAllGames = () => {\r\n\t\tsetShow(!toggle);\r\n\t};\r\n\tconst handleSearch = useCallback(\r\n\t\t() => {\r\n\t\t\tsetSearch(searchInput.current.value);\r\n\t\t},\r\n\t\t//requiere este elemento que useCallback va escuchar y solo va escuchar otra vez cuando este elemento cambie. Pero lo ponemos vacio para poder usar el hook (no usamos este elemento)\r\n\t\t[]\r\n\t);\r\n\r\n\t//cuando cambie characters o/y cambie search useMemo recordarÃ¡\r\n\r\n\tconst filterPlayers = useMemo(\r\n\t\t() =>\r\n\t\tmatches.filter((players) => {\r\n\t\t\t\t// con includes compara si search (estado actual de input es igual al valor del input user.name)\r\n\t\t\t\treturn players.playerHome.toLowerCase().includes(search.toLowerCase());\r\n\t\t\t}),\r\n\t\t[matches,search]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='score'>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='score-lastMonth'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={handleMatchDate}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLast Month\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<Search\r\n\t\t\t\t\t\tsearch={search}\r\n\t\t\t\t\t\tsearchInput={searchInput}\r\n\t\t\t\t\t\thandleSearch={handleSearch}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<ul className='score-allGames'>\r\n\t\t\t\t\t\t<li>all the games</li>\r\n\t\t\t\t\t\t<li className='score-allGames-animate' onClick={showAllGames}>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={!toggle ? blackRightArrow : blackDownArrow}\r\n\t\t\t\t\t\t\t\talt='arrow'\r\n\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\r\n\t\t\t\t{toggle\r\n\t\t\t\t\t? filterPlayers.map((match) => {\r\n\t\t\t\t\t\t\treturn <Match key={match.id} match={match} />;\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t: null}\r\n\r\n\t\t\t\t{allGames &&\r\n\t\t\t\t\ttoggle &&\r\n\t\t\t\t\tmatchesNotLastMonth.map((matchNotLastMonth) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MatchNotLastMonth\r\n\t\t\t\t\t\t\t\tkey={matchNotLastMonth.id}\r\n\t\t\t\t\t\t\t\tmatchNotLastMonth={matchNotLastMonth}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport Header from './Header';\r\nimport Main from './Main';\r\n\r\nconst Layout = () =>{\r\n    return (      \r\n        <>\r\n            <header>\r\n                <Header />\r\n            </header>\r\n\r\n            <main>\r\n                <Main />\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","import {useState} from 'react';\r\n\r\nimport initialState from '../initialState.json';\r\n\r\nconst useInitialState = () =>{\r\n    const [state, setState] = useState(initialState);\r\n    \r\n\r\n    const addToMatch = (items) => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tmatches: [...state.matches, items],\r\n\t\t});\r\n\t};\r\n  \r\n\r\n    const dateLastMonthShowDate = () =>{\r\n        \r\n        const notLastMontGames = {\r\n            notLastMonth: state.matches.filter((items) => {return new Date(Date.parse(items.date)).getMonth() !== new Date().getMonth() ||  new Date(Date.parse(items.date)).getFullYear() !== new Date().getFullYear() }),\r\n            lastMonth: state.matches.filter((items) => {return new Date(Date.parse(items.date)).getMonth() === new Date().getMonth() &&  new Date(Date.parse(items.date)).getFullYear() === new Date().getFullYear() })\r\n        };\r\n\r\n        // console.log( state.matches.filter((items) => {return new Date(Date.parse(items.date)).getMonth() === new Date().getMonth() &&  new Date(Date.parse(items.date)).getFullYear() === new Date().getFullYear() }));               \r\n        // console.log( state.matches.filter((items) => {return new Date(Date.parse(items.date)).getMonth() !== new Date().getMonth() ||  new Date(Date.parse(items.date)).getFullYear() !== new Date().getFullYear() }));               \r\n\r\n        if(notLastMontGames.notLastMonth.length !== 0){\r\n            setState({\r\n                ...state,                \r\n                matches: notLastMontGames.lastMonth,\r\n                matchesNotLastMonth: notLastMontGames.notLastMonth\r\n            });\r\n        }        \r\n        \r\n    }\r\n\r\n    return {\r\n        addToMatch,        \r\n        dateLastMonthShowDate,       \r\n        state\r\n    } \r\n        \r\n}\r\n\r\nexport default useInitialState;\r\n\r\n","import React from 'react';\r\n\r\nimport Layout from './components/Layout';\r\nimport AppContext from './context/AppContext';\r\nimport useInitialState from './hooks/useInitialState';\r\nimport './styles/style.css';\r\n\r\n\r\nconst App = () =>{\r\n    const initialState = useInitialState();\r\n    return (\r\n        <AppContext.Provider value={initialState}>\r\n            <Layout />\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n  \r\nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}